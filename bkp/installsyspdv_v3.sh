#!/bin/bash
# ****************************************************************
#
# Script de Instala√ß√£o/Atualiza√ß√£o do SysPDV PDV nos Caixas Linux
# Vers√£o: 1.0
# Desenvolvido por: Matheus Wesley
# Contatos: https://matheuswesley.github.io/devlinks
#
# ****************************************************************

# --------------------
# **** Variaveis *****
# --------------------

# Cores
RED='\033[1;31m'
GREEN='\033[1;32m'
YELLOW='\033[1;33m'
BLUE='\033[1;34m'
CYAN='\033[1;36m'
NC='\033[0m' # Sem cor

# √çcones
INSTALL_ICON="üîß"
UPDATE_ICON="üîÑ"
INVALID_ICON="‚ùå"
DONE_ICON="‚úÖ"

DOWNLOAD_DIR='/home/pdv/Downloads'

# --------------------
# **** Fun√ß√µes *******
# --------------------

# Verifica se os programas est√£o instalados e instala caso n√£o
requisitos(){

  echo "Verificando dependencias..."

  # wget
  if ! command -v wget &> /dev/null; then
    echo "Instalando wget"
    sudo apt update && sudo apt install -y wget
    if [ $? -eq 0 ]; then
      echo "O wget foi instalado com sucesso."
    else
      echo "Falha na instala√ß√£o do wget."
      exit 1
    fi
  else
    echo "O wget -> OK"
  fi

}

# Fun√ß√£o para baixar a BUILD
baixar_build() {
  echo -e "${BLUE}Informe a BUILD para download. ${NC}"
  read -p ": " build
  echo -e "${YELLOW}Baixando...${NC}"
  
  if wget -P /home/pdv/Downloads/ https://objectstorage.us-ashburn-1.oraclecloud.com/n/casamagalhaes/b/syspdv/o/b$build/InstaladorSysPDV19_0_0_$build.exe; then
    echo -e "${GREEN}A BUILD: $build foi baixada em /home/pdv/Downloads${NC}"
    echo -e "${YELLOW}Iniciando instala√ß√£o...${NC}"
    chmod +x /home/pdv/Downloads/InstaladorSysPDV19_0_0_$build.exe
    wine /home/pdv/Downloads/InstaladorSysPDV19_0_0_$build.exe
  else
    echo -e "${RED}Falha no download.${NC}"
  fi
}


# Fun√ß√£o que abre arquivos de configura√ß√£o dos perifericos
configurar_perifericos() {
  read -p "Deseja configurar os perifericos?(S/n): " confirm
  if [[ "$confirm" == "" || "$confirm" == "S" || "$confirm" == "s" ]]; then
    echo "Abrindo os arquivos (setty e 90-dispositivos-rules)"
    # Abrindo os arquivos setty e 90-dispositivos-usb.rules
    subl /usr/local/bin/setty && subl /etc/udev/rules.d/90-dispositivos-usb.rules
  else
    echo "Configura√ß√£o de perifericos cancelado."
  fi
}

# Fun√ß√£o para instalar o SysPDV
instalar_syspdv() {
  requisitos
  read -p "Deseja instalar o SysPDV? (S/n): " confirm

  if [[ "$confirm" == "" || "$confirm" == "S" || "$confirm" == "s" ]]; then
    baixar_build
    configurar_perifericos
  else
    echo "Instala√ß√£o cancelada!"
  fi
}

# Fun√ß√£o para atualizar o SysPDV
atualizar_syspdv() {
  read -p "Deseja atualizar o SysPDV? (S/n) " confirm

  if [[ "$confirm" == "" || "$confirm" == "S" || "$confirm" == "s" ]]; then
    echo "Atualiza√ß√£o........"
  else
    echo "Atualiza√ß√£o cancelada!"
  fi
}

# --------------------
# ****** MENU ********
# --------------------
while true; do
  echo -e "${CYAN}--------------------------------${NC}"
  echo ""
  echo -e "${CYAN}${INSTALL_ICON}  1. Instalar o SysPDV PDV.${NC}"
  echo -e "${CYAN}${UPDATE_ICON}  2. Atualizar o SysPDV PDV.${NC}"
  echo ""
  echo -e "${CYAN}Pressione CTRL + C para sair.${NC}"
  echo -e "${CYAN}--------------------------------${NC}"
  echo ""
  read -p "Escolha uma op√ß√£o: " opc

  case $opc in
  1)
    clear
    instalar_syspdv
    echo -e "${GREEN}Instala√ß√£o conclu√≠da ${DONE_ICON}${NC}"
    exit
    ;;
  2)
    clear
    atualizar_syspdv
    echo -e "${GREEN}Atualiza√ß√£o conclu√≠da ${DONE_ICON}${NC}"
    exit
    ;;
  *)
    clear
    echo -e "${RED}Op√ß√£o inv√°lida!! ${INVALID_ICON}${NC}"
    exit
    ;;
  esac
done